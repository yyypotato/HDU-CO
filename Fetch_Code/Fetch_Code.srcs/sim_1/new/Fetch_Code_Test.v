`timescale 1ns / 1ps
module Fetch_Code_Test;
//inputs
reg IR_Write,PC_Write,clk_im,Reset;
//outputs
wire [4:0] rs1,rs2,rd;
wire [6:0] opcode,funct7;
wire [2:0] funct3;
wire [31:0] imm32=uut.imm32;
Fetch_Code uut (
    .IR_Write(IR_Write),
    .PC_Write(PC_Write),
    .Reset(Reset),
    .clk_im(clk_im),
    .rs1(rs1),
    .rs2(rs2),
    .rd(rd),
    .opcode(opcode),
    .funct3(funct3),
    .funct7(funct7)
);
initial begin
    //初始化
    IR_Write=0;
    PC_Write=0;
    clk_im=1;
    Reset=0;
    #10
    PC_Write=1;
    Reset=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    #10
    PC_Write=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    #10
    PC_Write=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    #10
    PC_Write=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    #10
    PC_Write=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    #10
    PC_Write=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    #10
    PC_Write=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    #10
    PC_Write=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    #10
    PC_Write=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    #10
    PC_Write=1;
    clk_im=0;//PC自增
    #10
    PC_Write=0;
    clk_im=1;//从存储器读出数据
    #10
    IR_Write=1;//写入IR
    clk_im=0;
    #10
    IR_Write=0;
    clk_im=1;
    
    
end
endmodule
